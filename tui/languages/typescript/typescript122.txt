function knapsack(weights: number[], values: number[], capacity: number): number {
  const n = weights.length;
  const dp: number[][] = Array(n + 1).fill(null).map(() => Array(capacity + 1).fill(0));

  for (let i = 1; i <= n; i++) {
    for (let w = 0; w <= capacity; w++) {
      if (weights[i - 1] <= w) {
        dp[i][w] = Math.max(
          values[i - 1] + dp[i - 1][w - weights[i - 1]], // Take item
          dp[i - 1][w] // Skip item
        );
      } else {
        dp[i][w] = dp[i - 1][w]; // Can't take item
      }
    }
  }

  return dp[n][capacity];
}

console.log(knapsack([2, 3, 4, 5], [3, 4, 5, 6], 5)); // 7

